
pwm.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001e4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000006  00800060  000001e4  00000278  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000009  00800066  00800066  0000027e  2**0
                  ALLOC
  3 .stab         00000b1c  00000000  00000000  00000280  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000932  00000000  00000000  00000d9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  000016ce  2**0
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
   0:	0e c0       	rjmp	.+28     	; 0x1e <__ctors_end>
   2:	28 c0       	rjmp	.+80     	; 0x54 <__bad_interrupt>
   4:	27 c0       	rjmp	.+78     	; 0x54 <__bad_interrupt>
   6:	26 c0       	rjmp	.+76     	; 0x54 <__bad_interrupt>
   8:	25 c0       	rjmp	.+74     	; 0x54 <__bad_interrupt>
   a:	24 c0       	rjmp	.+72     	; 0x54 <__bad_interrupt>
   c:	23 c0       	rjmp	.+70     	; 0x54 <__bad_interrupt>
   e:	22 c0       	rjmp	.+68     	; 0x54 <__bad_interrupt>
  10:	21 c0       	rjmp	.+66     	; 0x54 <__bad_interrupt>
  12:	20 c0       	rjmp	.+64     	; 0x54 <__bad_interrupt>
  14:	1f c0       	rjmp	.+62     	; 0x54 <__bad_interrupt>
  16:	1e c0       	rjmp	.+60     	; 0x54 <__bad_interrupt>
  18:	1d c0       	rjmp	.+58     	; 0x54 <__bad_interrupt>
  1a:	1c c0       	rjmp	.+56     	; 0x54 <__bad_interrupt>
  1c:	1b c0       	rjmp	.+54     	; 0x54 <__bad_interrupt>

0000001e <__ctors_end>:
  1e:	11 24       	eor	r1, r1
  20:	1f be       	out	0x3f, r1	; 63
  22:	cf e5       	ldi	r28, 0x5F	; 95
  24:	d2 e0       	ldi	r29, 0x02	; 2
  26:	de bf       	out	0x3e, r29	; 62
  28:	cd bf       	out	0x3d, r28	; 61

0000002a <__do_copy_data>:
  2a:	10 e0       	ldi	r17, 0x00	; 0
  2c:	a0 e6       	ldi	r26, 0x60	; 96
  2e:	b0 e0       	ldi	r27, 0x00	; 0
  30:	e4 ee       	ldi	r30, 0xE4	; 228
  32:	f1 e0       	ldi	r31, 0x01	; 1
  34:	02 c0       	rjmp	.+4      	; 0x3a <__do_copy_data+0x10>
  36:	05 90       	lpm	r0, Z+
  38:	0d 92       	st	X+, r0
  3a:	a6 36       	cpi	r26, 0x66	; 102
  3c:	b1 07       	cpc	r27, r17
  3e:	d9 f7       	brne	.-10     	; 0x36 <__do_copy_data+0xc>

00000040 <__do_clear_bss>:
  40:	10 e0       	ldi	r17, 0x00	; 0
  42:	a6 e6       	ldi	r26, 0x66	; 102
  44:	b0 e0       	ldi	r27, 0x00	; 0
  46:	01 c0       	rjmp	.+2      	; 0x4a <.do_clear_bss_start>

00000048 <.do_clear_bss_loop>:
  48:	1d 92       	st	X+, r1

0000004a <.do_clear_bss_start>:
  4a:	af 36       	cpi	r26, 0x6F	; 111
  4c:	b1 07       	cpc	r27, r17
  4e:	e1 f7       	brne	.-8      	; 0x48 <.do_clear_bss_loop>
  50:	67 d0       	rcall	.+206    	; 0x120 <main>
  52:	c6 c0       	rjmp	.+396    	; 0x1e0 <_exit>

00000054 <__bad_interrupt>:
  54:	d5 cf       	rjmp	.-86     	; 0x0 <__vectors>

00000056 <initADC>:
  56:	96 e8       	ldi	r25, 0x86	; 134
  58:	96 b9       	out	0x06, r25	; 6
  5a:	82 30       	cpi	r24, 0x02	; 2
  5c:	11 f4       	brne	.+4      	; 0x62 <initADC+0xc>
  5e:	81 e2       	ldi	r24, 0x21	; 33
  60:	07 c0       	rjmp	.+14     	; 0x70 <initADC+0x1a>
  62:	83 30       	cpi	r24, 0x03	; 3
  64:	11 f4       	brne	.+4      	; 0x6a <initADC+0x14>
  66:	83 e2       	ldi	r24, 0x23	; 35
  68:	03 c0       	rjmp	.+6      	; 0x70 <initADC+0x1a>
  6a:	84 30       	cpi	r24, 0x04	; 4
  6c:	11 f4       	brne	.+4      	; 0x72 <initADC+0x1c>
  6e:	82 e2       	ldi	r24, 0x22	; 34
  70:	87 b9       	out	0x07, r24	; 7
  72:	08 95       	ret

00000074 <readADC>:
  74:	36 9a       	sbi	0x06, 6	; 6
  76:	36 99       	sbic	0x06, 6	; 6
  78:	fe cf       	rjmp	.-4      	; 0x76 <readADC+0x2>
  7a:	85 b1       	in	r24, 0x05	; 5
  7c:	08 95       	ret

0000007e <delay_ms>:
  7e:	20 e0       	ldi	r18, 0x00	; 0
  80:	30 e0       	ldi	r19, 0x00	; 0
  82:	08 c0       	rjmp	.+16     	; 0x94 <delay_ms+0x16>
  84:	ef ec       	ldi	r30, 0xCF	; 207
  86:	f7 e0       	ldi	r31, 0x07	; 7
  88:	31 97       	sbiw	r30, 0x01	; 1
  8a:	f1 f7       	brne	.-4      	; 0x88 <delay_ms+0xa>
  8c:	00 c0       	rjmp	.+0      	; 0x8e <delay_ms+0x10>
  8e:	00 00       	nop
  90:	2f 5f       	subi	r18, 0xFF	; 255
  92:	3f 4f       	sbci	r19, 0xFF	; 255
  94:	28 17       	cp	r18, r24
  96:	39 07       	cpc	r19, r25
  98:	a9 f7       	brne	.-22     	; 0x84 <delay_ms+0x6>
  9a:	08 95       	ret

0000009c <encoder>:
  9c:	80 91 64 00 	lds	r24, 0x0064
  a0:	88 0f       	add	r24, r24
  a2:	88 0f       	add	r24, r24
  a4:	80 93 64 00 	sts	0x0064, r24
  a8:	b3 9b       	sbis	0x16, 3	; 22
  aa:	03 c0       	rjmp	.+6      	; 0xb2 <encoder+0x16>
  ac:	81 60       	ori	r24, 0x01	; 1
  ae:	80 93 64 00 	sts	0x0064, r24
  b2:	b4 9b       	sbis	0x16, 4	; 22
  b4:	05 c0       	rjmp	.+10     	; 0xc0 <encoder+0x24>
  b6:	80 91 64 00 	lds	r24, 0x0064
  ba:	82 60       	ori	r24, 0x02	; 2
  bc:	80 93 64 00 	sts	0x0064, r24
  c0:	80 91 64 00 	lds	r24, 0x0064
  c4:	8f 70       	andi	r24, 0x0F	; 15
  c6:	80 93 64 00 	sts	0x0064, r24
  ca:	90 91 66 00 	lds	r25, 0x0066
  ce:	99 23       	and	r25, r25
  d0:	31 f0       	breq	.+12     	; 0xde <encoder+0x42>
  d2:	8f 30       	cpi	r24, 0x0F	; 15
  d4:	09 f0       	breq	.+2      	; 0xd8 <encoder+0x3c>
  d6:	1f c0       	rjmp	.+62     	; 0x116 <encoder+0x7a>
  d8:	10 92 66 00 	sts	0x0066, r1
  dc:	1c c0       	rjmp	.+56     	; 0x116 <encoder+0x7a>
  de:	8e 30       	cpi	r24, 0x0E	; 14
  e0:	49 f4       	brne	.+18     	; 0xf4 <encoder+0x58>
  e2:	80 91 67 00 	lds	r24, 0x0067
  e6:	90 91 68 00 	lds	r25, 0x0068
  ea:	8c 3f       	cpi	r24, 0xFC	; 252
  ec:	91 05       	cpc	r25, r1
  ee:	98 f4       	brcc	.+38     	; 0x116 <encoder+0x7a>
  f0:	03 96       	adiw	r24, 0x03	; 3
  f2:	0a c0       	rjmp	.+20     	; 0x108 <encoder+0x6c>
  f4:	8d 30       	cpi	r24, 0x0D	; 13
  f6:	79 f4       	brne	.+30     	; 0x116 <encoder+0x7a>
  f8:	80 91 67 00 	lds	r24, 0x0067
  fc:	90 91 68 00 	lds	r25, 0x0068
 100:	84 30       	cpi	r24, 0x04	; 4
 102:	91 05       	cpc	r25, r1
 104:	40 f0       	brcs	.+16     	; 0x116 <encoder+0x7a>
 106:	03 97       	sbiw	r24, 0x03	; 3
 108:	90 93 68 00 	sts	0x0068, r25
 10c:	80 93 67 00 	sts	0x0067, r24
 110:	81 e0       	ldi	r24, 0x01	; 1
 112:	80 93 66 00 	sts	0x0066, r24
 116:	80 91 67 00 	lds	r24, 0x0067
 11a:	90 91 68 00 	lds	r25, 0x0068
 11e:	08 95       	ret

00000120 <main>:
uint16_t scaledADC;


int main()
{
	DDRB |= (1<<PB0);					// PWM port set to output
 120:	b8 9a       	sbi	0x17, 0	; 23

    initADC(PB3);
 122:	83 e0       	ldi	r24, 0x03	; 3
 124:	98 df       	rcall	.-208    	; 0x56 <initADC>
	
 	OCR0A = 128;						// 75% duty cycle
 126:	80 e8       	ldi	r24, 0x80	; 128
 128:	89 bd       	out	0x29, r24	; 41
	TCCR0A |= (1<<COM0A1);				// Fast PWM non inverting mode
 12a:	8a b5       	in	r24, 0x2a	; 42
 12c:	80 68       	ori	r24, 0x80	; 128
 12e:	8a bd       	out	0x2a, r24	; 42
	TCCR0A |= (1<<WGM00);				// Top OCRA
 130:	8a b5       	in	r24, 0x2a	; 42
 132:	81 60       	ori	r24, 0x01	; 1
 134:	8a bd       	out	0x2a, r24	; 42
	TCCR0A |= (1<<WGM01);				// Update at Bottom
 136:	8a b5       	in	r24, 0x2a	; 42
 138:	82 60       	ori	r24, 0x02	; 2
 13a:	8a bd       	out	0x2a, r24	; 42
//	TCCR0B |= (1<<WGM02);				// TOV set at top
//	TCCR0B |= (1<<CS00);				// No Prescaler
	TCCR0B |= (1<<CS01);				// /8 Prescaler
 13c:	83 b7       	in	r24, 0x33	; 51
 13e:	82 60       	ori	r24, 0x02	; 2
 140:	83 bf       	out	0x33, r24	; 51
//	TCCR0B |= (1<<CS02);				// /256 Prescaler

	sei(); 
 142:	78 94       	sei

	actualDif = actualMax - actualMin;
 144:	80 91 60 00 	lds	r24, 0x0060
 148:	90 91 61 00 	lds	r25, 0x0061
 14c:	20 91 62 00 	lds	r18, 0x0062
 150:	30 91 63 00 	lds	r19, 0x0063
 154:	82 1b       	sub	r24, r18
 156:	93 0b       	sbc	r25, r19
 158:	90 93 6c 00 	sts	0x006C, r25
 15c:	80 93 6b 00 	sts	0x006B, r24

 while (1) 
 {
	 actualADC = readADC();
 160:	89 df       	rcall	.-238    	; 0x74 <readADC>
 162:	90 e0       	ldi	r25, 0x00	; 0
 164:	90 93 6e 00 	sts	0x006E, r25
 168:	80 93 6d 00 	sts	0x006D, r24
	 scaledADC = (actualDif*(actualADC-actualMin))/actualDif;
 16c:	20 91 6b 00 	lds	r18, 0x006B
 170:	30 91 6c 00 	lds	r19, 0x006C
 174:	40 91 62 00 	lds	r20, 0x0062
 178:	50 91 63 00 	lds	r21, 0x0063
 17c:	84 1b       	sub	r24, r20
 17e:	95 0b       	sbc	r25, r21
 180:	b9 01       	movw	r22, r18
 182:	08 d0       	rcall	.+16     	; 0x194 <__mulhi3>
 184:	b9 01       	movw	r22, r18
 186:	18 d0       	rcall	.+48     	; 0x1b8 <__udivmodhi4>
 188:	60 93 69 00 	sts	0x0069, r22
 18c:	70 93 6a 00 	sts	0x006A, r23
	 OCR0A = scaledADC;
 190:	69 bd       	out	0x29, r22	; 41
 192:	e6 cf       	rjmp	.-52     	; 0x160 <main+0x40>

00000194 <__mulhi3>:
 194:	55 27       	eor	r21, r21
 196:	00 24       	eor	r0, r0

00000198 <__mulhi3_loop>:
 198:	80 ff       	sbrs	r24, 0
 19a:	02 c0       	rjmp	.+4      	; 0x1a0 <__mulhi3_skip1>
 19c:	06 0e       	add	r0, r22
 19e:	57 1f       	adc	r21, r23

000001a0 <__mulhi3_skip1>:
 1a0:	66 0f       	add	r22, r22
 1a2:	77 1f       	adc	r23, r23
 1a4:	61 15       	cp	r22, r1
 1a6:	71 05       	cpc	r23, r1
 1a8:	21 f0       	breq	.+8      	; 0x1b2 <__mulhi3_exit>
 1aa:	96 95       	lsr	r25
 1ac:	87 95       	ror	r24
 1ae:	00 97       	sbiw	r24, 0x00	; 0
 1b0:	99 f7       	brne	.-26     	; 0x198 <__mulhi3_loop>

000001b2 <__mulhi3_exit>:
 1b2:	95 2f       	mov	r25, r21
 1b4:	80 2d       	mov	r24, r0
 1b6:	08 95       	ret

000001b8 <__udivmodhi4>:
 1b8:	aa 1b       	sub	r26, r26
 1ba:	bb 1b       	sub	r27, r27
 1bc:	51 e1       	ldi	r21, 0x11	; 17
 1be:	07 c0       	rjmp	.+14     	; 0x1ce <__udivmodhi4_ep>

000001c0 <__udivmodhi4_loop>:
 1c0:	aa 1f       	adc	r26, r26
 1c2:	bb 1f       	adc	r27, r27
 1c4:	a6 17       	cp	r26, r22
 1c6:	b7 07       	cpc	r27, r23
 1c8:	10 f0       	brcs	.+4      	; 0x1ce <__udivmodhi4_ep>
 1ca:	a6 1b       	sub	r26, r22
 1cc:	b7 0b       	sbc	r27, r23

000001ce <__udivmodhi4_ep>:
 1ce:	88 1f       	adc	r24, r24
 1d0:	99 1f       	adc	r25, r25
 1d2:	5a 95       	dec	r21
 1d4:	a9 f7       	brne	.-22     	; 0x1c0 <__udivmodhi4_loop>
 1d6:	80 95       	com	r24
 1d8:	90 95       	com	r25
 1da:	bc 01       	movw	r22, r24
 1dc:	cd 01       	movw	r24, r26
 1de:	08 95       	ret

000001e0 <_exit>:
 1e0:	f8 94       	cli

000001e2 <__stop_program>:
 1e2:	ff cf       	rjmp	.-2      	; 0x1e2 <__stop_program>
